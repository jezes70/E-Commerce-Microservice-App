version: '3.8'

services:
  mysql:
    container_name: ms_mysql
    image: mysql:latest
    init: true
    environment:
      MYSQL_ROOT_PASSWORD: morris
      MYSQL_DATABASE: ecommerce_db
      MYSQL_USER: morris
      MYSQL_PASSWORD: morris
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - microservices-net
    restart: unless-stopped

  adminer:
    container_name: ms_adminer
    image: adminer
    init: true
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - "8084:80"
    networks:
      - microservices-net
    restart: unless-stopped

  mongodb:
    image: mongo
    container_name: ms_mongo_db
    init: true
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: morris
      MONGO_INITDB_ROOT_PASSWORD: morris
    networks:
      - microservices-net
    restart: unless-stopped

  mongo-express:
    container_name: ms_mongo_express
    image: mongo-express
    init: true
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: morris
      ME_CONFIG_MONGODB_ADMINPASSWORD: morris
      ME_CONFIG_MONGODB_SERVER: mongodb
    ports:
      - "8081:8081"
    networks:
      - microservices-net
    restart: unless-stopped

  zookeeper:
   image: confluentinc/cp-zookeeper:latest
   container_name: zookeeper
   environment:
     ZOOKEEPER_SERVER_ID: 1
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000
   ports:
     - 22181:2181
   networks:
     - microservices-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    init: true
    ports:
      - "1080:1080"  # Web interface
      - "1025:1025"  # SMTP port
    networks:
      - microservices-net
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  mysql_data:
  mongo_data: